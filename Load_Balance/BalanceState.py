from State import State
from consts import SHIP_HEIGHT, SHIP_WIDTH

'''
    State subclass for Balancing
    goal state is when left and right are balanced within 10%
    next_states generates all possible states that can be reached from the current state
        states are generated by
            moving each reachable container to each possible position
    the heuristic of a state is
        the absolute difference between the left and right weights
'''
class BalanceState(State):
    def __init__(self, manifest):
        super().__init__(manifest)
        self.left_weight = 0
        self.right_weight = 0
        
        if manifest is not None:
            self.weigh_sides()

    def weigh_sides(self):
        for i in range(SHIP_HEIGHT):
            for j in range(SHIP_WIDTH):
                if self.ship[i][j]:
                    if j < SHIP_WIDTH//2:
                        self.left_weight += self.ship[i][j].weight
                    else:
                        self.right_weight += self.ship[i][j].weight


    def calculate_h(self):
        self.h = abs(self.left_weight - self.right_weight)

    def is_goal(self):
        return abs(self.left_weight - self.right_weight) 